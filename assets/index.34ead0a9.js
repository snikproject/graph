var ft=Object.defineProperty,wt=Object.defineProperties;var yt=Object.getOwnPropertyDescriptors;var Oe=Object.getOwnPropertySymbols;var bt=Object.prototype.hasOwnProperty,vt=Object.prototype.propertyIsEnumerable;var fe=(t,e,n)=>e in t?ft(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,T=(t,e)=>{for(var n in e||(e={}))bt.call(e,n)&&fe(t,n,e[n]);if(Oe)for(var n of Oe(e))vt.call(e,n)&&fe(t,n,e[n]);return t},we=(t,e)=>wt(t,yt(e));var b=(t,e,n)=>(fe(t,typeof e!="symbol"?e+"":e,n),n);import{l as c,S as St,c as te,a as O,t as Ae,b as Ct,d as kt,G as Lt,s as Et,h as xt,F as Nt,N as Tt,e as ye}from"./vendor.172259f7.js";const It=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const i of o)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function n(o){const i={};return o.integrity&&(i.integrity=o.integrity),o.referrerpolicy&&(i.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?i.credentials="include":o.crossorigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(o){if(o.ep)return;o.ep=!0;const i=n(o);fetch(o.href,i)}};It();var g={defaultSubOntologies:["bb","ob","ciox","he","it4it"],allSubOntologies:["meta","bb","ob","ciox","he","he-unconsolidated","it4it"],color:new Map([["ciox","rgb(80,255,250)"],["meta","rgb(255,80,80)"],["ob","rgb(255,173,30)"],["bb","rgb(30,152,255)"],["he","rgb(150,255,120)"],["it","rgb(204, 0, 204)"],["it4it","rgb(255, 255, 0)"]]),nodeSize:39,helperGraphs:["limes-exact","match"],activeOptions:[],searchCloseMatch:!0,logLevelConsole:"debug",logLevelDisplay:"info",logLevelMemory:"debug",layoutCacheMinRecall:.95,layoutCacheMinPrecision:.5,language:"en",download:{image:{max:{width:5e3,height:4e3},standard:{width:1920,height:1920}}},sparql:{endpoint:"https://www.snik.eu/sparql",graph:"http://www.snik.eu/ontology",instances:!1},multiview:{initialTabs:1,warnOnSessionLoad:!0}};const Me="http://www.snik.eu/ontology/",Re="https://www.snik.eu/sparql",be=100;async function M(t,e,n=g.sparql.endpoint){let s=n+"?query="+encodeURIComponent(t)+"&format=json";e&&(s+="&default-graph-uri="+encodeURIComponent(e));try{const a=(await(await fetch(s)).json()).results.bindings;return console.groupCollapsed("SPARQL "+t.split(`
`,1)[0]+"..."),a.length<100&&console.table(a.map(r=>Object.keys(r).reduce((l,h)=>(l[h]=r[h].value,l),{}))),c.debug(t),c.debug(s),console.groupEnd(),a}catch(o){return c.error(o),c.error(`Error executing SPARQL query:
${t}
URL: ${s}

`),[]}}function Ot(t,e){const n="describe <"+t+">",s=g.sparql.endpoint+"?query="+encodeURIComponent(n)+"&format=text"+(e?"&default-graph-uri="+encodeURIComponent(e):"");return fetch(s).then(o=>o.text()).catch(o=>{throw new Error(`Error executing SPARQL query ${n}: ${o}`)})}function G(t){const e=new Date;return{stop:function(n){const o=new Date().getTime()-e.getTime();c.debug(t+" finished in "+o+" ms"+(n?` (${n})`:""))}}}async function At(t){const e=G("sparql-classes"),n=`
  PREFIX ov: <http://open.vocab.org/terms/>
  SELECT ?c
  GROUP_CONCAT(distinct(CONCAT(?l,"@",lang(?l)));separator="|") as ?l
  ?src
  ${t}
  {
    ?c a owl:Class.
    OPTIONAL {?c rdfs:label ?l.}
    OPTIONAL {?src ov:defines ?c.}
  }
  `,s=`
  PREFIX ov: <http://open.vocab.org/terms/>
  PREFIX meta: <http://www.snik.eu/ontology/meta/>
  SELECT DISTINCT(?c)
  GROUP_CONCAT(DISTINCT(CONCAT(?l,"@",lang(?l)));separator="|") AS ?l
  SAMPLE(?st) AS ?st
  ?src
  SAMPLE(?inst) AS ?inst
  ${t}
  {
    ?c a owl:Class.
    OPTIONAL {?src ov:defines ?c.}
    OPTIONAL {?c meta:subTopClass ?st.}
    OPTIONAL {?c rdfs:label ?l.}
    OPTIONAL {?inst a ?c.}
  }`,o=g.sparql.endpoint.includes("snik.eu/sparql")?s:n,i=await M(o);return e.stop(i.length+" classes"),i}function $e(t){const e=t.split("|"),n={};for(const s of e){const[o,i]=s.split("@");!o.trim()||(n[i]||(n[i]=[]),n[i].push(o))}return n}async function Pe(t){const e=await At(t),n=[],s=new Set;for(let a=0;a<e.length;a++){let r;e[a].src&&(r=e[a].src.value,r.includes("http://www.snik.eu/ontology/")&&(r=r.replace("http://www.snik.eu/ontology/","")),s.add(r)),n.push({group:"nodes",data:T(T(T({id:e[a].c.value,l:$e(e[a].l.value)},e[a].st&&{st:e[a].st.value.replace("http://www.snik.eu/ontology/meta/","").substring(0,1)}),r&&{source:r}),e[a].inst&&{inst:!0})})}const o=["rgb(30,152,255)","rgb(255,173,30)","rgb(80,255,250)","rgb(150,255,120)","rgb(204, 0, 204)","rgb(255, 255, 0)"];let i=0;for(const a of s)g.color.has(a)||(g.color.set(a,o[i]),i=(i+1)%o.length);return c.debug(e.length+" Nodes loaded from SPARQL"),n}async function Mt(t){const e=G("sparql-classes"),n=`SELECT
  DISTINCT(?i)
  GROUP_CONCAT(DISTINCT(CONCAT(?l,"@",lang(?l)));separator="|") AS ?l
  ${t}
  {
    ?i a [a owl:Class].
    OPTIONAL {?i rdfs:label ?l.}
  }
  `,s=await M(n);return e.stop(s.length+" instances"),s}async function Rt(t){const e=await Mt(t),n=[];for(let s=0;s<e.length;s++)n.push({group:"nodes",data:{id:e[s].i.value,l:$e(e[s].l.value),instance:!0}});return n}async function $t(t,e,n,s){const o=G("sparql-properties"),i=`
    select  ?c ?p ?d
    ${t}
    {
      {?c ?p ?d.} ${s?" UNION {?p rdfs:domain ?c; rdfs:range ?d.}":""}
      {?c a owl:Class.} ${n?" UNION {?c a [a owl:Class]}":""}
      {?d a owl:Class.} ${n?" UNION {?d a [a owl:Class]}":""}
    }`,a=`PREFIX sniko: <http://www.snik.eu/ontology/>
    select  ?c ?p ?d ?g (MIN(?ax) as ?ax)
    ${t}
    ${e}
    {
      graph ?g {?c ?p ?d.}
      filter(?g!=sniko:)
      {?c a owl:Class.} ${n?" UNION {?c a [a owl:Class]}":""}
      {?d a owl:Class.} ${n?" UNION {?d a [a owl:Class]}":""}
      filter(?p!=meta:subTopClass)
      OPTIONAL
      {
        ?ax a owl:Axiom;
        owl:annotatedSource ?c;
        owl:annotatedProperty ?p;
        owl:annotatedTarget ?d.
      }
    }`,r=g.sparql.endpoint.includes("snik.eu/sparql")?a:i,l=await M(r);return o.stop(l.length+" properties"),l}async function Pt(t,e,n,s){const o=await $t(t,e,n,s),i=[];for(let a=0;a<o.length;a++)i.push({group:"edges",data:T(T({source:o[a].c.value,target:o[a].d.value,id:String(a),p:o[a].p.value,pl:o[a].p.value.replace(/.*[#/]/,"")},o[a].g&&{g:o[a].g.value}),o[a].ax&&{ax:o[a].ax.value})});return c.debug(o.length+" Edges loaded from SPARQL"),i}async function Bt(t,e){if(!e)return Pe(t);const[n,s]=await Promise.all([Pe(t),Rt(t)]);return n.concat(s)}async function Be(t,e,n=!1,s=!1){c.debug(`Loading graph from endpoint ${g.sparql.endpoint} with graphs ${e}.`);const o=e.map(l=>`FROM <${l}>`).reduce((l,h)=>l+`
`+h,""),i=o.replace(/FROM/g,"FROM NAMED"),[a,r]=await Promise.all([Bt(o,n),Pt(o,i,n,s)]);t.elements().remove(),t.add(a),t.add(r),t.elements().addClass("unfiltered")}const y="id",Ft="l",Fe="de",Ue="en",ze="fa",Q="st",I="source",ne="inst",He="E",De="R",Ge="F",U="3.0.0",Ut=500;function E(t){const e=document.getElementById(t);if(!e)throw new Error(`Element with id ${t} does not exist.`);return e}const zt="https://github.com/IMISE/snik-cytoscape",se="https://github.com/IMISE/snik-ontology";function _(t,e,n,s){let o=encodeURIComponent(n);if(s){const i=s.map(r=>encodeURIComponent(r));let a=i.reduce((r,l)=>r+"%0A"+l);for(;a.length>Ut;)i.shift(),a=i.reduce((r,l)=>r+"%0A"+l,"");o+="%0A%60%60%60%0A"+a+"%0A%60%60%60"}window.open(`${t}/issues/new?title=${encodeURIComponent(e)}&body=${o}`)}const qe=t=>e=>{switch(e.key){case" ":case"Enter":t.click()}};function Ve(t,e,n){const s=document.createElement("div");return s.classList.add("dropdown-entry-checkboxtext"),s.innerText=e,n&&s.setAttribute("data-i18n",n),s.addEventListener("click",()=>{t.click()}),s}const N="source",z="target",A="p",Ht="pl",je="g",We="ax";var Dt={idStrings:{file:"File","load-sparql":"Load from SPARQL endpoint","load-session":"Load session","load-view":"Load Partial Graph","save-session":"Save Session","save-snik-graph":"Save complete SNIK Graph as Cytoscape File","save-view":"Save current Partial Graph","recalculate-layout-replace":"Recalculate Layout and Replace in Browser Cache","save-image-current-view":"Save Image of Current View","save-image-whole-graph":"Save Image of Whole Graph","save-image-current-view-high-res":"Save Image of Current View (high res)","save-image-whole-graph-high-res":"Save Image of Whole Graph (high res)",filter:"Filter",options:"Options",separateSubs:"separate subontologies",cumulativeSearch:"cumulative search",grid:"show grid",dayMode:"day mode",devMode:"developer mode",extMode:"extended mode",combineMatchMode:"Combine Matches",showInstances:"Show Instances",starNewView:"Star in new View",layout:"Layout","show-close-matches":"show close matches","recalculate-layout":"recalculate layout","tight-layout":"tight layout","compound-layout":"compound layout","bb-chapter-search":"BB chapter search","ob-chapter-search":"OB chapter search","reset-view":"reset main view","move-match-on-top":"move matches on top of each other","move-match-nearby":"move matches nearby","subontology-connectivity":"subontology connectivity","change-title":"change title of active View",services:"Services","sparql-endpoint":"SPARQL Endpoint","rdf-browser":"RDF Browser",language:"Language",english:"english",german:"german",persian:"persian",help:"Help","deselect-all":"deselect all","search-field":"search field","base-mode":"basic menu items","context-menu":"context menu","incoming-star":"incoming star","outgoing-star":"outgoing star","combine-close-matches":"combine close matches","class-use":"class use","show-instances":"show instances"},messageStrings:{"no-search-results-for":"No Search Results for","ontology-issue-warning":"Please note that this is only for feedback about the ontology! Please check if there is already an issue for your problem. If not, we will consider your feedback ASAP."}},Gt={idStrings:{file:"Datei","load-sparql":"Lade aus dem SPARQL Endpunkt","load-session":"Lade gespeicherte Sitzung","load-view":"Lade Teilgraph","save-session":"Speichere aktuelle Sitzung","save-snik-graph":"Speichere kompletten SNIK Graph als Cytoscape Datei","save-view":"Speichere aktuellen Teilgraphen","recalculate-layout-replace":"Layout neu berechnen und im Browser Cache platzieren","save-image-current-view":"Speichere Bilddatei der aktuellen Ansicht","save-image-whole-graph":"Speichere Bilddatei des kompletten Graphen","save-image-current-view-high-res":"Speichere Bilddatei der aktuellen Ansicht (hohe Aufl\xF6sung)","save-image-whole-graph-high-res":"Speichere Bilddatei des kompletten Graphen (hohe Aufl\xF6sung)",filter:"Filter",options:"Optionen",separateSubs:"nach Subontologien aufspalten",cumulativeSearch:"Kumulative Suche",grid:"Raster anzeigen",dayMode:"Tag-Modus",devMode:"Entwickler-Modus",extMode:"Erweiterter Modus",combineMatchMode:"\xDCbereinstimmungen zusammenfassen",showInstances:"Instanzen zeigen",layout:"Layout","show-close-matches":"Zeige close matches","recalculate-layout":"Layout neu berechnen","tight-layout":"Dichtes Layout","compound-layout":"verbundenes Layout","bb-chapter-search":"BB Kapitelsuche","ob-chapter-search":"OB Kapitelsuche","reset-view":"Ansicht des Gesamtmodells zur\xFCcksetzen","move-match-on-top":"Zeige close matches \xFCbereinander","move-match-nearby":"Zeige close matches verbunden","subontology-connectivity":"Konnektivit\xE4t zwischen Subontologien","change-title":"Titel des aktuellen View \xE4ndern",services:"Services","sparql-endpoint":"SPARQL Endpunkt","rdf-browser":"RDF Browser",language:"Sprache",english:"Englisch",german:"Deutsch",persian:"Persisch",help:"Hilfe","deselect-all":"alle abw\xE4hlen","search-field":"Suchfeld","base-mode":"Basismodus","context-menu":"Kontextmen\xFC","incoming-star":"eingehener Stern","outgoing-star":"ausgehender Stern","combine-close-matches":"kombiniere close matches","class-use":"Klassenbenutzung","show-instances":"zeige Instanzen"},messageStrings:{"no-search-results-for":"Keine Suchresultate f\xFCr","ontology-issue-warning":"Bitte hier nur Feedback zur Ontologie hinterlassen! Bitte pr\xFCfen Sie vorher, ob es schon eine Issue mit diesem Thema gibt. Wenn nicht, bearbeiten wir Ihr Feedback so schnell wie m\xF6glich."}};const ve={en:Dt,de:Gt,fa:{idStrings:{},messageStrings:{}}};let q="en";function qt(t){return c.debug(`Set language from ${q} to ${t}.`),ve[t]?(q=t,!0):(c.warn(`Language ${t} not found. Keeping language ${q}.`),!1)}function Ke(){return q}function Je(t){const e=ve[q];return e.all||(e.all=T(T({},e.idStrings),e.messageStrings)),e.all[t]}function Vt(){return ve[q].idStrings}const Se={SPARUL_WARNING:'Please be careful with all SPARUL operations and always create a <a href="https://wiki.imise.uni-leipzig.de/Projekte/SNIK/ontologie/sparql">SPARQL dump</a> as a backup beforehand.'};function jt(){const t=Vt(),e=[];for(const n of Object.keys(t)){const s=document.querySelectorAll(`[data-i18n="${n}"]`);if(s.length===0){e.push(n);continue}for(const o of s){const i=t[n];switch(o.tagName){case"A":case"BUTTON":case"DIV":case"SPAN":o.textContent=i;break;default:c.warn(`Cannot assign text "${i}" to element with i18n key ${n} because its tag type ${o.tagName} is unsupported.`)}}}e.length>0&&c.debug(`UpdateHtml: i18n keys ${e.toString()} not used`)}const Ce={format_version:"1.0",generated_by:"cytoscape-3.4.0",target_cytoscapejs_version:"~2.1",title:"MyStyle1",style:[{selector:"node",css:{"min-zoomed-font-size":5,width:g.nodeSize,height:g.nodeSize,"font-size":11,"text-valign":"center","text-halign":"center","border-opacity":1,"border-width":function(t){return t.data(ne)?1:0},"font-family":"sans-serif","font-weight":"normal","background-opacity":.5882352941176471,"text-opacity":1,shape:function(t){switch(t.data(Q)){case He:return"rectangle";case De:return"ellipse";case Ge:return"triangle"}switch(t.data(y)){case"http://www.snik.eu/ontology/meta/EntityType":return"rectangle";case"http://www.snik.eu/ontology/meta/Role":return"ellipse";case"http://www.snik.eu/ontology/meta/Function":return"triangle";default:return"hexagon"}},label:function(t){let e=t.data(Ft);if(!e)return t.data(y);let n;if((n=e[Ke()])&&(n=n[0]))e=n;else{let s=!1;for(const o of[Ue,Fe,ze])if((n=e[o])&&n[0]){e=n[0],s=!0;break}if(!s){const o=Object.keys(e);o.length>0?e=e[o[0]]:e=t.data(y)}}return t.data(ne)&&(e+="*"),e}}},{selector:"node.source",css:{"border-width":5}},{selector:"node.target",css:{"border-width":5}},{selector:"node.highlighted",css:{"border-width":5}},{selector:"node:selected",css:{"border-width":8}},{selector:"edge",css:{"z-compound-depth":"bottom",width:2,opacity:.2}},{selector:"edge.highlighted,edge:selected,edge.starmode",css:{"text-opacity":1,"mid-target-arrow-shape":function(t){switch(t.data(A)){case"http://www.snik.eu/ontology/meta/isAssociatedWith":case"http://www.w3.org/2004/02/skos/core#closeMatch":case"http://www.w3.org/2004/02/skos/core#relatedMatch":case"http://www.w3.org/2004/02/skos/core#related":case"http://www.w3.org/2004/02/skos/core#exactMatch":return"none"}return"triangle"},"text-margin-y":"-1em","min-zoomed-font-size":5,"font-size":11,label:function(t){let e=t.data(Ht);return t.data(je)==="http://www.snik.eu/ontology/limes-exact"&&(e+=" \u26A0"),e}}},{selector:"edge.highlighted,edge:selected",css:{width:4,opacity:1}},{selector:".filtered",css:{display:"none"}},{selector:".hidden",css:{visibility:"hidden"}},{selector:"$node > node",css:{shape:"rectangle","border-width":10,"text-valign":"top","text-margin-y":"-0.7em","min-zoomed-font-size":7.5,"font-size":16,"background-opacity":"0"}},{selector:"node[i]",css:{shape:"star"}},{selector:"node",css:{"background-color":t=>{let e=g.color.get(t.data(I));return e||(e="rgb(254,196,79)"),e},color:"white"}}]},Qe=[{selector:"node",css:{color:"white","border-color":"white"}},{selector:"node:selected",css:{"background-color":"rgb(255,255,0)"}},{selector:"node.source",css:{"border-color":"rgb(128,255,128)"}},{selector:"node.target",css:{"border-color":"rgb(255,90,90)"}},{selector:"edge:unselected",css:{"line-color":function(t){return String(t.data(A)).substring(0,36)==="http://www.w3.org/2004/02/skos/core#"?"rgb(255,255,190)":"rgb(252,252,252)"}}},{selector:"edge.starmode",css:{color:"rgb(128,128,128)","mid-target-arrow-color":"rgb(128,128,128)"}},{selector:"edge:selected,edge.highlighted",css:{color:"rgb(255,255,128)","line-color":"rgb(255,255,128)","mid-target-arrow-color":"rgb(255,255,128)"}}],Wt=[{selector:"node",css:{color:"black","border-color":"black"}},{selector:"node:selected",css:{"background-color":"rgb(0,0,255)"}},{selector:"node.source",css:{"border-color":"rgb(128,0,128)"}},{selector:"node.target",css:{"border-color":"rgb(0,165,165)"}},{selector:"edge[!selected]",css:{"line-color":function(t){return String(t.data(A)).substring(0,36)==="http://www.w3.org/2004/02/skos/core#"?"rgb(140,130,10)":"rgb(110,110,110)"}}},{selector:"edge.starmode",css:{opacity:1,"mid-target-arrow-color":"rgb(128,128,128)",color:"rgb(20,20,20)"}},{selector:"edge:selected,edge.highlighted",css:{color:"rgb(0,0,128)","line-color":"rgb(0,0,128)","mid-target-arrow-color":"rgb(0,0,128)"}}],_e=[["meta","http://www.snik.eu/ontology/meta/"],["bb","http://www.snik.eu/ontology/bb/"],["ob","http://www.snik.eu/ontology/ob/"],["he","http://www.snik.eu/ontology/he/"],["ciox","http://www.snik.eu/ontology/ciox/"],["it4it","http://www.snik.eu/ontology/it4it/"],["it","http://www.snik.eu/ontology/it/"],["skos","http://www.w3.org/2004/02/skos/core#"],["rdfs","http://www.w3.org/2000/01/rdf-schema#"],["rdf","http://www.w3.org/1999/02/22-rdf-syntax-ns#"]];function oe(t){for(const e of _e)if(t.startsWith(e[1]))return e[1].replace(/\/$/,"");return t}function V(t){for(const e of _e)t=t.replace(e[1],e[0]+":");return t}function Kt(t){return t.startsWith("http://www.snik.eu/ontology/")?t.replace(/\/[^/]*$/,""):null}const Jt={lines:13,length:28,width:35,radius:84,scale:3,corners:1,color:"#ffffff",opacity:.6,rotate:35,direction:1,speed:1,trail:60,fps:20,zIndex:2e9,className:"spinner",top:"50%",left:"50%",shadow:!1,hwaccel:!0,position:"absolute"};let ae=null,ie=0;async function Y(t){!window||(ae||(ae=new St(Jt)),ie||(document.body.classList.add("waiting"),ae.spin(document.body)),ie++,await t(),ie--,ie<=0&&(document.body.classList.remove("waiting"),ae.stop()))}var H;(function(t){t[t.IN=0]="IN",t[t.OUT=1]="OUT",t[t.BOTH=2]="BOTH"})(H||(H={}));class m{constructor(e){b(this,"cy");b(this,"selectedNode",null);b(this,"starMode",!1);b(this,"matchComponents",[]);b(this,"pathSource",null);b(this,"container");const n=G("graph-init");this.container=e,this.container.style.backgroundColor="black",this.cy=te({container:e,style:Ce.style.concat(Qe),wheelSensitivity:.3,minZoom:.02,maxZoom:7}),this.cy.on("select","node",o=>{this.selectedNode=o.target});const s=["resetStyle","presentUri","showPath","showStar","showWorm","showDoubleStar","combineMatch","showCloseMatch","subOntologyConnectivity","newGraph"];for(const o of s)this[o]=this[o].bind(this);n.stop()}cumulativeSearch(){return(document.getElementById("cumulativeSearchBox")||{}).checked}static setVisible(e,n=!0){if(n)e.removeClass("hidden");else{e.addClass("hidden"),e.removeClass("highlighted");const s=e.connectedEdges();s.addClass("hidden"),s.removeClass("highlighted")}}static starStyle(e){e.removeClass("hidden"),e.select()}resetStyle(){this.starMode=!1,this.cy.startBatch(),this.cy.elements().removeClass("highlighted"),this.cy.elements().removeClass("starmode"),this.cy.elements().removeClass("hidden"),this.cy.endBatch()}showPath(e,n){return s=>{if(!s)return c.error("No path source."),!1;if(s===e)return c.warn(`Path source ${s.data(y)} equals target.`),!1;const o=this.cy.elements(".unfiltered"),a=o.aStar({root:s,goal:e}).path;if(a){if(this.cy.startBatch(),this.cy.add(a),n){const r=a.connectedEdges(".unfiltered");a.merge(r),a.merge(r.connectedNodes(".unfiltered"))}m.starStyle(a),this.starMode?a.select():(this.starMode=!0,m.setVisible(o.not(a),!1)),this.cy.endBatch()}else return this.starMode||this.resetStyle(),c.warn("No path found!"),!1;return!0}}showStarMultiplexed(e=!1,n){return this.multiplex(s=>this.showStar(s,e,n),void 0,!0)}async showStarMultiplexedNew(e,n){const s=await this.newGraph();return s.multiplex(i=>s.showStar(s.assimilate(i),e,n),s.assimilate(this.cy.nodes(":selected")),!0)}showStar(e,n=!1,s){console.log("center",e),this.cy.startBatch();let o=e,i;for(let d=0;d<o.size();)d=o.size(),i=o.connectedEdges(".unfiltered").filter('[pl="closeMatch"]'),o=o.union(i.connectedNodes(".unfiltered"));let a;switch(s){case 0:a=this.cy.elements(".unfiltered").edgesTo(o);break;case 1:a=o.edgesTo(".unfiltered");break;default:a=o.connectedEdges(".unfiltered")}const r=a.connectedNodes(".unfiltered"),l=o.union(r).union(a);l.merge(l.parent()),l.merge(l.children());const h=r.difference(o);(n||!this.starMode)&&(this.starMode=!0,m.setVisible(this.cy.elements().not(l),!1)),console.log("star",l),m.starStyle(l),n&&r.sort((u,w)=>{const S=Math.min(u.edgesTo(o).map(R=>R.data("pl").split("").reduce((C,J)=>C+J.charCodeAt(0),0))),v=Math.min(w.edgesTo(o).map(R=>R.data("pl").split("").reduce((C,J)=>C+J.charCodeAt(0),0)));return S-v}).layout({name:"concentric",fit:!0,levelWidth:function(){return 1},minNodeSpacing:175,concentric:function(u){if(o.contains(u))return 2;if(h.contains(u))return 1;throw new Error("unexpected node in star")}}).run(),this.cy.endBatch(),m.setVisible(h.edgesWith(this.cy.nodes(".unfiltered").not(".hidden")));const p=this.cy.nodes(":visible");p.size()<100&&this.cy.fit(p,100)}showWorm(e){return this.showPath(e)?(this.showStar(e),!0):!1}showDoubleStar(e){const n=this.getSource();return this.showPath(e)?(this.showStar(e),this.showStar(n),!0):!1}assimilate(e){return this.getElementsByIds(e.map(n=>n.id()))}getElementsByIds(e){const n=this.cy.collection();for(const s of e){const o=this.cy.getElementById(s);n.merge(o)}return n}getSource(){return this.pathSource?this.pathSource:this.selectedNode?(c.debug("Path source not set, using selected node"),this.selectedNode):null}setSource(e){return c.debug("Setting path source to "+e.data(y)),e?e.length!==1?(c.error("Invalid source. Length != 1"),!1):(this.pathTarget&&this.cy.resize(),this.pathSource&&this.pathSource.removeClass("source"),this.pathSource===e?(c.info("Toggling path source off."),this.pathSource=null,!0):(this.pathSource=e,this.pathSource.addClass("source"),!0)):!1}invert(e){e?(this.container.style.backgroundColor="white",this.cy.style().fromJson(Ce.style.concat(Wt)).update()):(this.container.style.backgroundColor="black",this.cy.style().fromJson(Ce.style.concat(Qe)).update())}presentUri(e){this.cy.zoom(.6);const n=this.cy.elements().nodes().filter(`node[id= "${e}"]`);if(n.length<1)return c.warn(`Node not in graph. ${e} may be available on the SPARQL endpoint but not in the graph.`),!1;const s=n[0];return s.hasClass("filtered")?(c.warn(`Node is filtered out. ${e} is not visible. Please adjust filters.`),!1):(s.hasClass("hidden")&&(c.debug(`Node is hidden. Unhiding ${e}.`),m.setVisible(s,!0),m.setVisible(s.edgesWith(this.cy.nodes(":visible")),!0)),this.starMode||this.cumulativeSearch()||this.resetStyle(),this.cy.elements().unselect(),s.select(),this.cy.center(s),!0)}presentUris(e,n=!1){if(e.length<1)return c.warn("All search results are only available on the SPARQL endpoint but not in the graph."),!1;this.cumulativeSearch()||this.resetStyle();const s=this.cy.elements().nodes().filter(o=>e.includes(o.data(y)));return n&&(m.setVisible(this.cy.elements(),!1),m.setVisible(s.edgesTo(s),!0),this.starMode=!0),this.cy.elements().unselect(),s.select(),s.edgesTo(s).select(),this.cy.fit(this.cy.elements(":selected")),!0}multiplex(e,n,s){return o=>{const i=this.cy.nodes(":selected");let a=n;if(!n&&i.size()>1&&(a=i),a)if(o&&(a=a.union(o)),c.debug("multiplexing of "+a.size()+" elements (direct="+s+")"),s)e(a);else for(let r=0;r<a.length;r++)e(a[r]);else e(o)}}createRemoveIssue(e){this.cy.remove(e);const n=V(e.data(y));Ot(e.data(y)).then(s=>{const o=`Please permanently delete the class ${n}:
            \`\`\`

            sparql
            # WARNING: THIS WILL DELETE ALL TRIPLES THAT CONTAIN THE CLASS ${n} FROM THE GRAPH AS EITHER SUBJECT OR OBJECT
            # ALWAYS CREATE A BACKUP BEFORE THIS OPERATION AS A MISTAKE MAY DELETE THE WHOLE GRAPH.
            # THERE MAY BE DATA LEFT OVER IN OTHER GRAPHS, SUCH AS <http://www.snik.eu/ontology/limes-exact> or <http://www.snik.eu/ontology/match>.
            # THERE MAY BE LEFTOVER DATA IN AXIOMS OR ANNOTATIONS, CHECK THE UNDO DATA FOR SUCH THINGS.

            DELETE DATA FROM <${oe(e.data(y))}>
            {
              {<${e.data(y)}> ?p ?y.} UNION {?x ?p <${e.data(y)}>.}
            }
            
\`\`\`
            **Warning: Restoring a class with the following triples is not guaranteed to work and may have unintended consequences if other edits occur between the deletion and restoration.
            This only contains the triples from graph ${oe(e.data(y))}.**

            Undo based on these triples:
            \`\`\`

            ${s}
            
\`\`\`
            ${Se.SPARUL_WARNING}`;window.open("https://github.com/IMISE/snik-ontology/issues/new?title="+encodeURIComponent("Remove class "+n)+"&body="+encodeURIComponent(o))})}moveAllMatches(e){for(let n=0;n<this.matchComponents.length;n++){const s=this.matchComponents[n];s.length!==1&&this.moveNodes(s.nodes(),e)}}moveNodes(e,n){e.positions(e[0].position());for(let s=1;s<e.length;s++)e[s].shift({x:n*Math.cos(2*Math.PI*s/(e.length-1)),y:n*Math.sin(2*Math.PI*s/(e.length-1))})}async combineMatch(e){await Y(()=>{if(!e){this.cy.startBatch(),this.cy.nodes(":child").move({parent:null}),this.cy.nodes("[id ^= 'parent']").remove(),this.matchComponents.length=0,this.cy.endBatch();return}this.cy.startBatch();const n=this.cy.edges('[pl="closeMatch"]').filter(".unfiltered").not(".hidden"),s=this.cy.nodes(".unfiltered").not(".hidden").union(n);!this.moveMatchNotified&&this.cy.nodes(":visible").size()>1e3&&(c.info("Combining Matches. Consider using Move Matches Nearby or Move Matches on top of each other."),this.moveMatchNotified=!0),this.matchComponents.length=0,this.matchComponents.push(...s.components());for(let o=0;o<this.matchComponents.length;o++){const i=this.matchComponents[o];if(i.length===1)continue;const a="parent"+o,r={};let l=i.nodes();for(let d=0;d<l.length;d++){const u=l[d].data("l");for(const w in u)r[w]||(r[w]=new Set),u[w].forEach(S=>r[w].add(S))}for(const d in r)r[d]=[[...r[d]].reduce((u,w)=>u+", "+w)];const h=["bb","ob","he","it4it","ciox"],p=d=>{let u=h.indexOf(d);return u===-1&&(u=99),u};l=l.sort((d,u)=>p(d.data(I))-p(u.data(I))),this.cy.add({group:"nodes",data:{id:a,l:r}});for(let d=0;d<l.length;d++)l[d].move({parent:a})}this.cy.endBatch()})}showCloseMatch(e){const n=e.connectedEdges(".unfiltered").filter('[pl="closeMatch"]'),s=n.connectedNodes(".unfiltered");c.debug(`Showing close matches of ${e.length} nodes ${JSON.stringify(e.map(i=>i.id()))}.
Results: ${JSON.stringify(s.map(i=>i.id()))}`);const o=s.union(n);m.setVisible(o,!0),m.starStyle(o)}subOntologyConnectivity(){O.show("subontology-connectivity");const e=document.getElementById("subontology-connectivity-form");e.listener||(e.listener=async n=>{n.preventDefault(),O.close("subontology-connectivity");const s=new P;await s.initialized;const o=[e[0].value,e[1].value];c.debug(`Showing connectivity between the subontologies ${o[0]} and ${o[1]}.`);const i=o.map(l=>s.state.cy.nodes(`[source="${l}"]`)),r=i[0].edgesWith(i[1]).connectedNodes();m.setVisible(s.state.cy.elements(),!1),m.setVisible(r,!0),m.setVisible(r.edgesWith(r),!0),r.layout({name:"concentric",fit:!0,levelWidth:function(){return 1},minNodeSpacing:60,concentric:function(l){return i[0].contains(l)?2:1}}).run()},e.addEventListener("submit",e.listener))}async newGraph(e){if(this!==L.state.graph)return this;const n=new P(!0,e);return await n.initialized,n.state.graph}}let Qt=0;async function _t(t,e){const n={R:["meta:Role","meta:Function","meta:EntityType"],F:["meta:Function","meta:Role","meta:EntityType"],E:["meta:EntityType","meta:Function","meta:Role"]};if(!(e in n)){c.error("Unknown subtop '"+e+"'. Cannot display class use.");return}const[s,o,i]=n[e],a=`select distinct ?inner ?middle ?outer ?outerx
    {
      <${t}> (rdfs:subClassOf|skos:closeMatch|^skos:closeMatch)* ?inner.
      ?inner meta:subTopClass ${s}.
      OPTIONAL
      {
        ?inner ?p ?middle.
        ?middle meta:subTopClass ${o}.
        OPTIONAL
        {
          ?middle ?q ?outer.
          ?outer meta:subTopClass ${i}.
          OPTIONAL {?outer (skos:closeMatch|^skos:closeMatch|^rdfs:subClassOf)+ ?outerx.}
        }
      }
    }`,r=await M(a),[l,h,p,d]=[...new Array(4)].map(()=>new Set);for(let k=0;k<r.length;k++)l.add(r[k].inner.value),r[k].middle&&h.add(r[k].middle.value),r[k].outer&&p.add(r[k].outer.value),r[k].outerx&&d.add(r[k].outerx.value);if(h.size===0){c.warn("Class "+t+" is not used.");return}const w=document.getElementById("combineMatchModeBox").checked;w&&L.state.graph.combineMatch(!1);const S=new P(!0,"Class Use "+ ++Qt+" "+V(t));await S.initialized;const v=S.state.graph;v.cy.startBatch(),v.resetStyle(),m.setVisible(v.cy.elements(),!1),v.starMode=!0;const R=new Set([...l,...h,...p,...d]),C=v.cy.collection(`node[id='${t}']`);for(const k of R){const F=v.cy.nodes(`node[id='${k}']`);C.merge(F)}const J=C.merge(C.edgesWith(C));C.layout({name:"concentric",fit:!0,levelWidth:function(){return 1},minNodeSpacing:20,concentric:function(k){const F=k.data(y);return F===t?10:l.has(F)?9:h.has(F)?8:p.has(F)?7:d.has(F)?6:10}}).run(),m.setVisible(J,!0),w&&[L,S].forEach(k=>k.state.graph.combineMatch(!0));const mt=v.cy.nodes(`node[id='${t}']`);v.cy.center(mt),v.cy.fit(C),v.cy.endBatch()}const ke=t=>e=>t(e.target);function Yt(t){return[{content:"compound",id:"compound",selector:"node:compound",submenu:[{content:"open",id:"open",onClickFunction:e=>{e.target.children().move({event:null}),t.cy.remove(e.target)}},{content:"move matches on top of each other",id:"move-match-on-top",onClickFunction:e=>t.moveNodes(e.target.children(),0)},{content:"move matches nearby",id:"move-match-nearby",onClickFunction:e=>t.moveNodes(e.target.children(),100)},{content:"star",id:"compound-star",onClickFunction:e=>t.multiplex(t.showStar,e.target.children(),!0)()},{content:"incoming star",id:"compound-incoming-star",onClickFunction:e=>t.multiplex(n=>t.showStar(n,!1,H.IN),e.target.children(),!0)()},{content:"outgoing star",id:"compound-outgoing-star",onClickFunction:e=>t.multiplex(n=>t.showStar(n,!1,H.OUT),e.target.children(),!0)()},{content:"set as path source",id:"compound-path-source",onClickFunction:e=>{t.setSource(e.target.children()[0])}}]},{content:"edit/report",id:"edit",selector:"node",onClickFunction:e=>{const n=e.target,s=`Problem with the class [${V(n.data(y))}](${n.data(y)}) ([OntoWiki URL](${re(n.data(y))})):

`;_(se,n.data(y),s)}},{content:"class use",id:"class-use",selector:"node",onClickFunction:e=>{const n=e.target;_t(n.data(y),n.data(Q))}},{content:"hide",id:"hide",selector:"node",onClickFunction:ke(t.multiplex(e=>m.setVisible(e,!1)))},{content:"set as path source",id:"set-path-source",selector:"node",onClickFunction:e=>{t.setSource(e.target)}},{content:"description",id:"description",selector:"node",onClickFunction:e=>{window.open(e.target.data(y))}},{content:"star",id:"star",selector:"node",onClickFunction:async e=>{(await t.showStarMultiplexedNew(!1,H.BOTH))(e.target)}},{content:"incoming star",id:"incoming-star",selector:"node",onClickFunction:async e=>{(await t.showStarMultiplexedNew(!1,H.IN))(e.target)}},{content:"outgoing star",id:"outgoing-star",selector:"node",onClickFunction:async e=>{(await t.showStarMultiplexedNew(!1,H.OUT))(e.target)}},{content:"path",id:"path",selector:"node",onClickFunction:e=>t.multiplex(t.showPath(e.target))(t.getSource())},{content:"spiderworm",id:"spiderworm",selector:"node",onClickFunction:ke(t.multiplex(t.showWorm))},{content:"developer",id:"dev",selector:"node",submenu:[{content:"remove permanently",id:"remove-permanently",selector:"node",onClickFunction:e=>t.createRemoveIssue(e.target)},{content:"OntoWiki",id:"ontowiki",selector:"node",onClickFunction:e=>window.open(re(e.target.data(y)))},{content:"debug",id:"debug",selector:"node",onClickFunction:e=>alert(JSON.stringify(e.target.data(),null,2))}]},{content:"extended",id:"ext",selector:"node",submenu:[{content:"doublestar",id:"doublestar",selector:"node",onClickFunction:e=>t.multiplex(t.showDoubleStar)(e.target)},{content:"starpath",id:"starpath",selector:"node",onClickFunction:e=>t.multiplex(t.showPath(e.target,!0))(t.getSource())},{content:"circle star",id:"circlestar",selector:"node",onClickFunction:e=>{t.showStar(e.target,!0)}},{content:"LodLive",id:"lodlive",selector:"node",onClickFunction:e=>{window.open("http://en.lodlive.it/?"+e.target.data(y))}},{content:"move all selected here",id:"move-selected",selector:"node",onClickFunction:e=>{t.cy.nodes(":selected").positions(()=>e.target.position())}},{content:"close matches",id:"close-match",selector:"node",onClickFunction:ke(t.multiplex(t.showCloseMatch,void 0,!0))},{content:"show instances",id:"show-instances",onClickFunction:async e=>{const s=e.target.data(y),o=`SELECT ?i STR(SAMPLE(?label)) AS ?l {
        ?i a <${s}>
        OPTIONAL {?i rdfs:label ?label. FILTER(LANGMATCHES(LANG(?label),"${Ke()}"))}
        }`;let a=(await M(o)).map(r=>r.i.value+" "+(r.l?r.l.value:"")).reduce((r,l)=>r+`
`+l,"");a===""&&(a=`Class ${s} does not have any instances.`),alert(a)}}]}]}function j(t){return V(t.data(N))+" "+V(t.data(A))+" "+V(t.data(z))}function Xt(t){return[{content:"edit / report",id:"edge-edit",selector:"edge",onClickFunction:n=>{const s=n.target,o=`Problem with the edge [${j(s)}](${s.data(N)}) ([OntoWiki URL](${re(s.data(N))})):

`;_(se,j(s),o)}},{content:"hide",id:"edge-hide",selector:"edge",onClickFunction:n=>m.setVisible(n.target,!1)},{content:"description (if it exists)",id:"edge-description",selector:"edge",onClickFunction:n=>{const s=n.target;s.data(We)?window.open(s.data(We)):c.warn("There is no description for this edge.")}},{content:"confirm link",id:"edge-confirm-link",selector:"edge",onClickFunction:n=>{const s=n.target;s.data(je,"http://www.snik.eu/ontology/match");const o=`Please confirm the automatic interlink ${j(s)}:
					\`\`\`

					sparql
					DELETE DATA FROM <http://www.snik.eu/ontology/limes-exact>
					{<${s.data(N)}> <${s.data(A)}> <${s.data(z)}>.}
					INSERT DATA INTO <http://www.snik.eu/ontology/match>
					{<${s.data(N)}> <${s.data(A)}> <${s.data(z)}>.}
					
\`\`\`
					Undo with
					\`\`\`

					sparql
					DELETE DATA FROM <http://www.snik.eu/ontology/match>
					{<${s.data(N)}> <${s.data(A)}> <${s.data(z)}>.}
					INSERT DATA INTO <http://www.snik.eu/ontology/limes-exact>
					{<${s.data(N)}> <${s.data(A)}> <${s.data(z)}>.}
					
\`\`\`
					${Se.SPARUL_WARNING}`;_(se,j(s),o)}},{content:"developer",id:"edge-dev",selector:"edge",submenu:[{content:"remove permanently",id:"remove-permanently",onClickFunction:n=>{const s=n.target;t.cy.remove(s);const o=`Please permanently delete the edge ${j(s)}:
					\`\`\`

					sparql
					DELETE DATA FROM <${oe(s.data(N))}>
					{<${s.data(N)}> <${s.data(A)}> <${s.data(z)}>.}
					
\`\`\`
					Undo with
					\`\`\`

					sparql
					INSERT DATA INTO <${oe(s.data(N))}>
					{<${s.data(N)}> <${s.data(A)}> <${s.data(z)}>.}
					
\`\`\`
					${Se.SPARUL_WARNING}`;_(se,j(s),o)}},{content:"OntoWiki",id:"edge-ontowiki",onClickFunction:n=>{window.open(re(n.target.data(N)))}},{content:"debug",id:"edge-debug",onClickFunction:n=>{alert(JSON.stringify(n.target.data(),null,2))}}]}]}const Zt={"SNIK Graph Manual":{img:"graph.png"},"Multiview-Functionality":{"":"SNIK Graph supports the organization and management of different partial models in separate views.To copy a part of the whole graph, press 'C' or 'S' and to insert it into a new model press 'V' or 'P'.","search-field":"Search the currently active view for resources by entering a full or partial name.","View-specific menu":{"":"The view-specific menu can be found in the upper right position of each view, described from left to right.",img:"viewmenu.png",recalculatesign:"Recalculate Layout",tightlayoutsign:"Tight layout",compoundlayoutsign:"Compound layout",addsign:"Open new Tab",plussign:"Zoom in",minussign:"Zoom out"}},menu:{file:{"":"Holds different file options like loading and saving the graph in different ways.","load-sparql":"Discard the currently loaded graph and load all ontologies of SNIK.","load-session":"Load a complete session from a Cytoscape JSON File. Caution: Discards all changes!","load-view":"Load a saved view (partial graph) and include it in the current session.","save-session":"Save the complete Session (all views).","save-snik-graph":"Save the complete SNIK graph to a Cytoscape file.","save-view":"Save only the currently active view (partial graph).","recalculate-layout-replace":"Recalculate the position of all visible nodes. May take a while when a large number of nodes are visible.","save-image-current-view":"Save a screenshot of the currently active view.","save-image-whole-graph":"Save an image of the whole graph with the same pixel density as the current view.","save-image-current-view-high-res":"Save an image of the current view with a high resolution, for example for printing.","save-image-whole-graph-high-res":"Save an image of the whole graph with a high resolution, for example for printing."},filter:{"":"A collection of filters to display relevant subgraphs. Filters are applied to all open views.",meta:"The Meta Ontology provides common superclasses and properties for the subontologies of SNIK.",bb:'Based on the book "Health Information Systems Ontology\u2013Architectures and Strategies".',ob:'Based on the book"IT-Projektmanagement im Gesundheitswesen - Lehrbuch und Projektleitfaden.',he:'Based on the book "Informationsmanagement: Grundlagen, Aufgaben, Methoden".',ciox:"Based on interviews about the Health Information System with Department B1, the Department for Information Management, of the Uniklinikum Leipzig.",role:"Who...",function:"...does what...",entitytype:"...and which information is therefore needed."},options:{"":"Here you can find different checkboxes that toggle the behaviour of SNIK Graph. These are applied to all open views.","separate-subs":"Spread the SNIK Graph into subgraphs of the subontologies.","cumulative-search":"Keep previous search results visible when searching again.",grid:"shows a grid that supports better organizing of nodes.","combine-match":'Highlights groups of classes representing the same concept from different subontologies (matches) by placing them in boxes. Use "move matches on top of each other" or "move matches nearby" to shrink those boxes.',showInstances:"Display instances of SNIK Classes, if loaded via parameter.","day-mode":"White background. Saves ink when printing.","dev-mode":"Additional context menu entries for developers.","ext-mode":"Additional context menu entries for power users."},layout:{"":"This part of the menu holds the layout features.","show-close-matches":"Shows (unhides) all nodes that are connected via close matches to visible nodes.","recalculate-layout":"Hotkey: Ctrl+Alt+L. Recalculates the position of all selected nodes, or all visible nodes if there are not at least two selected nodes. Can take a while if there are many visible nodes.","tight-layout":"Hotkey: Ctrl+Alt+T. You can use this for a more narrow view.","compound-layout":"Hotkey: Ctrl+Alt+C. Layout that tries to places combined matches next to each other.","move-match-on-top":'Requires enabled "Combine Matching" option. Places all matching nodes in the center of their group.',"move-match-nearby":'Requires enabled "Combine Matching" option. Places all matching nodes in a small circle in their group.',"bb-chapter-search":'Presents you all chapters of the "blue book" and lets you build a subgraph out of selected chapters .',"ob-chapter-search":'Presents you all chapters of the "orange book" and lets you build a subgraph out of selected chapters .',"subontology-connectivity":"Shows the connectivity between chosen Subontologies, i.e. between BB and OB, in a new tab.",img:"subontologyConnectivity.png","reset-view":"Resets all the layout operations to get you back to the starting point of the visualization.","change-title":"Opens a propmt to change the title of the currently active view."},services:{"":"Other ways to access SNIK.","sparql-endpoint":"Expert interface for the SPARQL Protocol and RDF Query Language endpoint.","rdf-browser":"Browse complete descriptions of resources in the RDF browser."},language:"Language switch, you can choose between English, German and Persian. Ontologies may not or not fully support all available languages.",help:"Common Help Menu, holds e.g. this manual"},"context-menu":{"":"Right click on a node/edge to open the context menu and choose among:","base-mode":{description:"Opens the node in an RDF browser, which shows all its properties and values.",star:{"":"Highlights and expands the node and all its directly connected nodes.",img:"star.png"},"incoming-star":"Highlights and expands the node and all neighbours directly connected via incoming edges.","outgoing-star":"Highlights and expands the node and all neighbours directly connected via outgoing edges.",path:{"":"Shortest Path between a selected source and this node.",img:"star.png"},spiderworm:{"":"The Spider Worm consists of the shortest path between a selected source and this node plus all direct neighbours. Displaying a spiderworm hides all other nodes and edges.",img:"spiderworm.png"},edit:"If you are a domain expert and notice incorrectly modelled facts or connections of a node, feel free to send us an issue.","combine-close-matches":"Merge equivalent classes from different subontologies.","class-use":"Visualize the interplay of role, function and entity type (related to the Meta model).",hide:"Hide the selected item until the view is resetted.","set-path-source":"Set the starting point for path operations.","confirm-link":"Confirm that the automatically generated interlink is correct."},"dev-mode":{"remove-permanently":"Send us an issue to delete the selected item permanently. Also removes it until graph is reloaded.",ontowiki:"Access restricted ontology editing tool.",debug:"Get debug information to the edge/node from the JSON File"},"ext-mode":{doublestar:{"":"The double star is like the spiderworm but shows connected nodes for both source and target, not just the target.",img:"doublestar.png"},starpath:{"":"Creates a path and star (expand) every node along it.",img:"starpath.png"},circlestar:{"":"A star (expansion of the node) using a circular layout. Hides all other nodes.",img:"circlestar.png"},lodlive:"Third party data visualization exploration tool."}}};function Ye(t){const e={};for(const n in t){if(n===""||n==="img")continue;const s=t[n];if(typeof s=="string"){e[n]=s;continue}s[""]&&(e[n]=s[""]),Object.assign(e,Ye(s))}return e}const Le=Ye(Zt);function Xe(){for(const t in Le){const e=Le[t];if(typeof e!="string"&&console.error("value "+e+" for key "+t+" not a string"),document.getElementById(t))Ae("#"+t,{content:e});else{const s=`[data-i18n="${t}"]`;document.querySelectorAll(s).length>0?Ae(s,{content:e}):c.trace(`tooltip init: found none of #${t} and [data-i18n="${t}"]`)}}}te.use(Ct);const Ze={menuItems:[]};class en{constructor(e){b(this,"graph");b(this,"cxtMenus");this.graph=e,c.debug("Register Context Menu."),Ze.menuItems=[...Yt(e),...Xt(e)],e.cy.contextMenus(Ze),this.cxtMenus=[]}static addTippy(e){return e.commands.forEach(n=>{if(n.tippy)return;n.tippy=!0;const s=Le[n.id];!s||(n.contentStyle={"pointer-eve":"all"},n.content=`<img src onerror="tippy('span')"><span data-tippy-content="${s}" style="padding:3em;">${n.content}</span>`)}),e}}const re=t=>"https://www.snik.eu/ontowiki/view/?r="+t+"&m="+Kt(t);te.use(kt);const tn=500;let W;function et(t,e,n){return"layout"+t+e.sort().toString().replace(/[^a-z]/g,"")+!!n}function tt(t){const e=[];for(let n=0;n<t.size();n++){const s=t[n];e.push([s.data(y),s.position()])}return e}function nt(t){const e={x:0,y:0};for(let n=0;n<t.length;n++){const s=t[n].position();e.x+=s.x,e.y+=s.y}return e.x/=t.length,e.y/=t.length,e}async function x(t,e,n,s,o){if(t.nodes().size()===0)return c.warn("layout.js#run: Graph empty. Nothing to layout."),!1;const i=G("layout");if(s){const u=new Set,w=[],S=t.nodes();for(let v=0;v<S.length;v++){const R=S[v],C=R.data(I);C&&(u.has(C)||(t.add({group:"nodes",data:{id:C,mass:400,type:"virtual"}}),u.add(C)),w.push({group:"edges",data:{source:R.data(y),target:C,springLength:180}}))}c.debug("Separate subontologies checked"),c.debug(`Adding ${w.length} virtual edges.`),t.add(w)}else c.debug("Separate subontologies unchecked");W&&W.stop();let a,r;t.nodes(":selected").size()>1?(a=t.elements(":selected"),r=!0):(a=t.elements(":visible"),r=!1);let l;r&&(l=nt(a.nodes()));const h=a.size()>tn&&typeof window!="undefined",p=we(T({},e),{animate:h});W=a.layout(p),W.on("layoutstop",()=>{if(r){const u=nt(a.nodes());a.nodes().shift({x:l.x-u.x,y:l.y-u.y})}if(i.stop(),n&&s){const u=t.nodes("[type='virtual']");c.debug(`Removing ${u.length} virtual nodes.`),t.remove(u)}if(n&&o){if(typeof localStorage=="undefined")return c.warn("web storage not available, could not write to cache."),!0;const u=tt(t.nodes()),w=et(e.name,n,s);localStorage.setItem(w,JSON.stringify(u)),c.info("Replaced layout cache.")}});const d=W.promiseOn("layoutready");return W.run(),d}async function nn(t,e){const n=new Map(e);let s=0,o=0;const a=await x(t,{name:"preset",fit:!0,positions:r=>{let l;return(l=n.get(r.data(y)))?(s++,l):(o++,{x:0,y:0})}});if(o>0||s<tt.length){c.debug(`...${s}/${t.nodes().size()} node positions set. ${e.length-s} superfluous layout positions .`);const r=s/e.length,l=s/t.nodes().size();if(r<g.layoutCacheMinPrecision)return c.warn(`Precision of ${r} less than minimal required precision of ${g.layoutCacheMinPrecision}.`),!1;if(l<g.layoutCacheMinRecall)return c.warn(`Recall of ${l} less than minimal required of recall of ${g.layoutCacheMinRecall}.`),!1}else c.debug("...layout applied with 100% overlap.");return s===0?!1:a}async function st(t,e,n,s){if(typeof localStorage=="undefined")return c.error("Web storage not available, could not access browser-based cache."),x(t,e,n,s,!1);const o=et(e.name,n,s),i=localStorage.getItem(o);if(i)try{const a=JSON.parse(i);if(c.debug(`Loaded layout from cache, applying ${a.length} positions...`),await nn(t,a))return!0;c.warn("Could not apply layout to active graph, recalculating layout...")}catch(a){c.warn("Could not load cache item, recalculating layout...",a)}else c.warn("Layout not in cache, recalculating layout...");return x(t,e,n,s,!0)}function sn(t){const e=t.data("springLength");return e||800}const K={name:"euler",springLength:t=>sn(t),animate:!0,refresh:50,maxSimulationTime:4e4,maxIterations:500,timeStep:80,randomize:!0,movementThreshold:1,fit:!0,mass:t=>t.data("mass")?t.data("mass"):40},ce={name:"euler",springLength:40,animate:!1,maxSimulationTime:4e4,maxIterations:500,timeStep:80,refresh:50,randomize:!1,movementThreshold:1,fit:!0,mass:40},ot={name:"cose",animate:!0,refresh:50,numIter:500,initialTemp:1e3,nestingFactor:1.01,randomize:!1,fit:!0};function at(){const t={settings:{selectionEnabled:!0},content:[{type:"stack",content:[]}]},e=new Lt(t);return e.on("selectionChanged ",n=>{c.info("SELECTION CHANGED"),c.info(n)}),e.on("stackCreated",function(n){e.selectItem(n);const s=E("goldenlayout-header"),o=document.importNode(s.content,!0);n.header.controlsContainer.prepend(o),n.on("activeContentItemChanged",()=>{e.selectItem(n)});const i=()=>n.getActiveContentItem().config.componentState,a=()=>i().cy,r=n.header.controlsContainer[0],l=()=>L.state.graph.menu.separateSubs()&&!i().graph.starMode,h=[[".plussign",()=>{a().zoom(a().zoom()*1.2)}],[".minussign",()=>{a().zoom(a().zoom()/1.2)}],[".addsign",()=>{new P}],[".recalculatesign",()=>{x(a(),K,t.defaultSubOntologies,l(),!0)}],[".tightlayoutsign",()=>{x(a(),ce,t.defaultSubOntologies,l(),!0)}],[".compoundlayoutsign",()=>{x(a(),ot,t.defaultSubOntologies,!1,!0)}]];for(const p of h)r.querySelector(p[0]).addEventListener("click",p[1])}),e.init(),e}let Ee=0,L=null;const X=new Set,le=()=>[L,...X];let xe=null,D=at();function f(){var t,e,n;return(n=(e=(t=D.selectedItem)==null?void 0:t.getActiveContentItem())==null?void 0:e.config)==null?void 0:n.componentState}function $(){var t;return(t=D.selectedItem)==null?void 0:t.getActiveContentItem()}class P{constructor(e=!0,n){b(this,"initialized");b(this,"state");b(this,"cyContainer",document.createElement("div"));b(this,"element");b(this,"cxtMenu");n=n!=null?n:Ee++==0?"Gesamtmodell":"Teilmodell "+(Ee-1),this.state={title:n,name:"unnamed"};const s={title:n,type:"component",componentName:n,componentState:this.state,isClosable:L!==null},o=this;L!==null&&X.add(this),D.registerComponent(n,function(r){o.element=r.getElement()[0],r.getElement()[0].appendChild(o.cyContainer),r.on("destroy",()=>{X.delete(o)})}),D.root.contentItems[0].addChild(s);const i=new m(o.cyContainer),a=i.cy;this.state.graph=i,this.state.cy=a,this.initialized=e?this.fill():Promise.resolve(),this.initialized.then(()=>{this.state.graph.invert(rt().options.dayMode),this.cxtMenu=new en(this.state.graph)})}async fill(){const e=this.state.graph;if(L===null)L=this,xe=In(e),await xe,c.debug(`Main view ${this.state.name} loaded with ${e.cy.elements().size()} elements.`);else{await xe,e.cy.add(L.state.cy.elements()),c.debug(`Create view ${this.state.title} with ${e.cy.elements().size()} hidden elements copied from ${L.state.title}.`);const n=e.cy.elements();m.setVisible(n,!1),m.setVisible(n.edgesWith(n),!1),n.removeClass("source"),e.starMode=!0}}}function it(t,e){const n=[];if(t.type==="component"&&t.componentName!=="Gesamtmodell")return n.push(t),n;for(const s of t.contentItems)n.push(...it(s));return n}function on(){const t=it(D.root);for(const e of t)e.remove();X.clear(),Ee=0,D.destroy(),D=at()}const an=[[`node[${I}='meta']`,"meta","meta"],[`node[${I}='bb']`,"BB","bb"],[`node[${I}='ob']`,"OB","ob"],[`node[${I}='ciox']`,"CioX","ciox"],[`node[${I}='he']`,"HE","he"],[`node[${I}='it']`,"IT","it"],[`node[${I}='it4it']`,"IT4IT","it4it"],[`node[${Q}='${De}']`,"Role","role"],[`node[${Q}='${Ge}']`,"Function","function"],[`node[${Q}='${He}']`,"EntityType","entitytype"],[`node[?${ne}]`,"Show Instances","show-instances"],[`node[!${ne}]`,"Show Non-Instances"],["edge[p='http://www.w3.org/2000/01/rdf-schema#subClassOf']","subClassOf","subclassof"],["edge[p!='http://www.w3.org/2000/01/rdf-schema#subClassOf']","non-subClassOf","non-subclassof"],["edge[p^='http://www.w3.org/2004/02/skos/core#']","inter-ontology-relations","inter-ontology-relations"],["edge[p!^='http://www.w3.org/2004/02/skos/core#']","non-inter-ontology-relations","non-inter-ontology-relations"]],de=[],ue=t=>le().map(e=>e.state.cy).forEach(e=>t(e));class rn{constructor(e,n,s){b(this,"selector");b(this,"label");b(this,"checkbox");b(this,"a");b(this,"cssClass");b(this,"visible");this.selector=e;const o=document.createElement("input");o.type="checkbox",this.checkbox=o,o.classList.add("filterbox"),o.autocomplete="off",o.checked=!0,this.label=n,this.a=document.createElement("a"),this.a.classList.add("dropdown-entry"),this.a.appendChild(o),this.a.setAttribute("tabindex","-1"),this.a.addEventListener("keydown",qe(o)),this.a.appendChild(Ve(o,n,s)),this.cssClass=`filter-${n}`,this.visible=!0,ue(i=>i.elements(this.selector).addClass(this.cssClass)),o.addEventListener("input",()=>this.setVisible(o.checked)),de.push(this)}toString(){return this.label}setVisible(e){if(this.visible===e)return;this.visible=e;const n=de.filter(s=>!s.visible).map(s=>s.selector);if(n.length===0)ue(s=>s.elements().removeClass("filtered")),ue(s=>s.elements().addClass("unfiltered")),c.debug("All filters checked");else{const s=n.reduce((o,i)=>o+","+i);ue(o=>{const i=o.elements(s);i.addClass("filtered"),i.removeClass("unfiltered");const a=o.elements().not(i);a.removeClass("filtered"),a.addClass("unfiltered")}),c.debug("filter "+s+" triggered")}}}function cn(t,e){for(const n of an){const s=new rn(n[0],n[1],n[2]);t.appendChild(s.a),e.push(s.a)}}function ln(){const t={};for(const e of de)t[e.label]=e.visible;return t}function dn(t){for(const e of de)e.checkbox.checked=t[e.label],e.visible=t[e.label]}const un={version:U};function rt(){const t={filters:ln(),options:me.optionsToJSON()};return Object.assign(t,un),t}function hn(t){dn(t.filters),me.optionsFromJSON(t.options)}te.use(Et);const B=document.createElement("a");document.body.appendChild(B);B.style.display="none";function Ne(t,e){const n=JSON.stringify(t),s=new Blob([n],{type:"application/json"}),o=window.URL.createObjectURL(s);B.href=o,B.download=e,B.click(),window.URL.revokeObjectURL(o),c.debug("JSON File saved: "+e)}function ct(t,e){B.href=t,B.download=e,B.click(),window.URL.revokeObjectURL(t),c.debug("File saved: "+e)}function gn(t){const e=t.cy.json();delete e.style,Ne(e,"snik.json")}function pn(t){const e={title:L.state.title,graph:L.state.cy.json(),options:t};delete e.graph.style;const n={tabs:[],state:rt(),mainGraph:e};for(const s of X){const o={title:s.state.title,graph:s.state.cy.json()};delete o.graph.style,n.tabs.push(o)}Ne(n,"snik-session.json")}function mn(t){const e={version:U,title:t.state.title,graph:t.state.cy.json()};delete e.graph.style,Ne(e,"snik-view.json")}function he(t,e,n,s){const o={bg:e?"white":"black",full:n,maxWidth:void 0,maxHeight:void 0};s?(o.maxWidth=g.download.image.max.width,o.maxHeight=g.download.image.max.height):n&&(o.maxWidth=g.download.image.standard.width,o.maxHeight=g.download.image.standard.height);const i=t.cy.png(o);ct(i,"snik.png")}function fn(t,e,n=!0){const s={full:n,scale:1,bg:e?"white":"black"},o=t.cy.svg(s),i=new Blob([o],{type:"image/svg+xml;charset=utf-8"}),a=window.URL.createObjectURL(i);ct(a,"snik.svg")}const lt=new Map,dt=new Map,ge=new Set;async function ut(t,e){const n=`SELECT DISTINCT(?class) ?label
  FROM <http://www.snik.eu/ontology/${t}>
  {
    ?class  ?p ?o;
            a owl:Class;
            rdfs:label ?label.
    {?class meta:chapter <${e}>.}
    UNION
    {?class meta:chapter/meta:subChapterOf <${e}>.}
    UNION
    {?class meta:chapter/meta:subChapterOf/meta:subChapterOf <${e}>.}
    UNION
    {?class meta:chapter/meta:subChapterOf/meta:subChapterOf/meta:subChapterOf <${e}>.}

    FILTER(LANGMATCHES(LANG(?label),"en"))
  }
  ORDER BY ASC(?class)`,s=await M(n);s.forEach(i=>{dt.set(i.class.value,i.label.value)});const o=s.map(i=>i.class.value);return lt.set(e,o),new Set(o)}async function ht(t,e){const n=E("tab:chapter-search-classes");for(;n.rows.length>0;)n.deleteRow(0);const s=(a,r)=>{const h=n.insertRow().insertCell(),p=document.createElement("a");h.appendChild(p),p.innerText=a,p.addEventListener("click",()=>{O.close("chapter-search"),t.resetStyle(),t.presentUris(e,r)})};s("Show Only those in Graph",!0),s("Highlight All in Graph",!1);const i=n.insertRow().insertCell();i.innerHTML="&nbsp;";for(const a of e){const l=n.insertRow().insertCell(),h=document.createElement("a");l.appendChild(h),h.innerText=dt.get(a),h.addEventListener("click",()=>{O.close("chapter-search"),t.presentUri(a)})}}async function gt(t,e){O.show("chapter-search");const n=E("tab:chapter-search-chapters");for(;n.rows.length>0;)n.deleteRow(0);{const r=E("tab:chapter-search-classes");for(;r.rows.length>0;)r.deleteRow(0)}ge.clear();const s=n.insertRow().insertCell(),o=document.createElement("a");s.appendChild(o),o.setAttribute("data-i18n","deselect-all"),o.innerText=Je("deselect-all"),o.addEventListener("click",()=>{for(const r of document.getElementsByClassName("chaptersearch-checkbox"))r.checked&&r.click()});const i=`SELECT COUNT(DISTINCT(?c)) AS ?count ?ch
  FROM <http://www.snik.eu/ontology/${e}>
  {
    ?c ?p ?o; a owl:Class.
    ?c meta:chapter/meta:subChapterOf* ?ch.
  } ORDER BY ASC(?ch)`,a=await M(i);for(const r of a){const l=r.ch.value,h=n.insertRow(),p=h.insertCell();p.addEventListener("click",async()=>ht(t,await ut(e,l)));const d=document.createElement("a");p.appendChild(d),d.innerText=r.ch.value;const u=h.insertCell();u.innerHTML=r.count.value;const w=h.insertCell(),S=document.createElement("input");w.appendChild(S),S.setAttribute("type","checkbox"),S.classList.add("chaptersearch-checkbox"),w.addEventListener("input",async()=>{S.checked?(await ut(e,l),ge.add(l)):ge.delete(l),ht(t,new Set([...ge].map(v=>lt.get(v)).flat().sort()))})}}function Te(t,e){const n=t.target.files[0],s=new FileReader;s.onload=()=>e(JSON.parse(s.result)),s.readAsText(n)}function pe(t,e){t.cy.elements().remove(),t.cy.json(e),t.cy.elements().addClass("unfiltered");const n=1*t.cy.elements(":visible").size()/t.cy.elements().size(),s=n<.8;c.debug("Load Graph from File: Visible fraction: "+n+" set star mode to "+s),t.cy.nodes(":child").size()>0&&(document.getElementById("combineMatchModeBox").checked=!0),t.starMode=s,t.cy.center(":visible"),t.cy.fit(":visible"),t.cy.elements().removeClass("highlighted"),t.cy.elements().removeClass("source")}const wn=t=>e=>{Te(e,n=>{pe(t,n)})};async function yn(t){!confirm("This will override the current session. Continue?")||Te(t,async e=>{if(e.state.version!==U&&!confirm(`Your file was saved in version ${e.state.version}, but SNIK Graph has version ${U}, so it may not work properly. Continue anyway?`))return;on();const n=new P(!1),s=[n.initialized];pe(n.state.graph,e.mainGraph.graph),$().setTitle(e.mainGraph.title);for(let o=0;o<e.tabs.length;o++){const i=new P(!1);s.push(i.initialized),pe(i.state.graph,e.tabs[o].graph),$().setTitle(e.tabs[o].title)}await Promise.all(s),hn(e.state)})}function bn(t){Te(t,e=>{if(e.version!==U&&!confirm(`Your file was saved in version ${e.version}, but SNIK Graph has version ${U}, so it may not work properly. Continue anyway?`))return;const n=new P(!1);pe(n.state.graph,e.graph),$().setTitle(e.title)})}function pt(t,e,n,s,o){const i=document.createElement("a");o.push(i),i.classList.add("dropdown-entry"),i.setAttribute("tabindex","-1"),t.appendChild(i);const a=document.createElement("input");a.type="file",a.style.display="none",i.appendChild(a);const r=document.createElement("span");r.innerText=n,r.setAttribute("data-i18n",e),i.appendChild(r),i.addEventListener("click",()=>a.click()),a.addEventListener("change",s)}function vn(t,e,n){pt(e,"load-view","Load Partial Graph into Session",bn,n),pt(e,"load-session","Load Session",yn,n)}let me=null;class Z{constructor(){b(this,"separateSubsBox");b(this,"dayModeBox");if(me)throw Error("Menu already exists.");document.body.addEventListener("click",Z.closeListener),this.showCloseMatches=this.showCloseMatches.bind(this),this.addMenu(),me=this}separateSubs(){return this.separateSubsBox.checked}setLanguage(e){if(!!qt(e)){jt();for(const n of le()){const s=n.state.graph.cy.elements();n.state.graph.cy.remove(s),s.restore()}}}static about(){window.alert("SNIK Graph version "+U)}static visualizationFeedback(){_(zt,"",`Please type your issue here:



!!Please do not delete the following text, because its the log for developers!!

`,c.logs)}showCloseMatches(){c.debug("show close matches start");const n=f().graph.cy.elements(".unfiltered").not(".hidden").connectedEdges(".unfiltered").filter('[pl="closeMatch"]');m.setVisible(n,!0),m.setVisible(n.connectedNodes(".unfiltered"),!0),c.debug("show close matches end")}menuData(){return[{label:"File",i18n:"file",id:"file",entries:[[async()=>{await Be(this.graph.cy,[]),Y(async()=>await st(this.graph.cy,K,g.defaultSubOntologies,this.separateSubs()))},"Load from SPARQL Endpoint","load-sparql"],[()=>pn(this.optionsToJSON()),"Save Session","save-session"],[()=>gn(f().graph),"Save the full SNIK Graph","save-snik-graph"],[()=>mn($()),"Save currently active view (partial graph)","save-view"],[()=>{Y(()=>x(f().cy,K,g.defaultSubOntologies,this.separateSubs(),!0))},"Recalculate Layout and Replace in Browser Cache","recalculate-layout-replace"],[()=>he(f().graph,this.dayModeBox.checked,!1,!1),"Save Image of Current View","save-image-current-view"],[()=>he(f().graph,this.dayModeBox.checked,!0,!1),"Save Image of Whole Graph","save-image-whole-graph"],[()=>he(f().graph,this.dayModeBox.checked,!1,!0),"Save Image of Current View (high res)","save-image-current-view-high-res"],[()=>he(f().graph,this.dayModeBox.checked,!0,!0),"Save Image of Whole Graph (high res)","save-image-whole-graph-high-res"],[()=>fn(f().graph,this.dayModeBox.checked,!0),"Save Image of Whole Graph (SVG)"]]},{label:"Filter",i18n:"filter",id:"filter",entries:[]},{label:"Options",i18n:"options",id:"options",entries:[]},{label:"Layout",i18n:"layout",entries:[[this.showCloseMatches,"show close matches","show-close-matches"],[()=>{x(f().graph.cy,K,g.defaultSubOntologies,this.separateSubs()&&!f().graph.starMode,!0)},"recalculate layout","recalculate-layout","ctrl+alt+l"],[()=>{x(f().graph.cy,ce,g.defaultSubOntologies,this.separateSubs()&&!f().graph.starMode,!1)},"tight layout","tight-layout","ctrl+alt+t"],[()=>{x(f().graph.cy,ot,g.defaultSubOntologies,this.separateSubs()&&!f().graph.starMode,!1)},"compound layout","compound-layout","ctrl+alt+c"],[()=>f().graph.moveAllMatches(0),"move matches on top of each other","move-match-on-top"],[()=>f().graph.moveAllMatches(100),"move matches nearby","move-match-nearby"],[()=>{gt(f().graph,"bb")},"BB chapter search","bb-chapter-search"],[()=>{gt(f().graph,"ob")},"OB chapter search","ob-chapter-search"],[f().graph.subOntologyConnectivity,"subontology connectivity","subontology-connectivity"],[L.state.graph.resetStyle,"reset main view","reset-view","ctrl+alt+r"],[()=>{$().setTitle(prompt("Rename: "+$().config.title)||$().config.title),f().title=$().config.title},"change title of active View","change-title"]]},{label:"Services",i18n:"services",entries:[["http://www.snik.eu/sparql","SPARQL Endpoint","sparql-endpoint"],["http://www.snik.eu/ontology","RDF Browser","rdf-browser"]]},{label:"Language",i18n:"language",entries:[[()=>this.setLanguage(Ue),"english","english"],[()=>this.setLanguage(Fe),"german","german"],[()=>this.setLanguage(ze),"persian","persian"]]},{label:"Help",i18n:"help",entries:[["manual.html","Manual"],["https://www.snik.eu/sites/www.snik.eu/files/files/uploads/Einfuehrung/snik-tutorial.pdf","Tutorial"],["layoutHelp.html","Layout Help"],["https://imise.github.io/snik-cytoscape.js/","Developer Documentation"],["https://www.youtube.com/channel/UCV8wbTpOdHurbaHqP0sAOng/featured","YouTube Channel"],["troubleshooting.html","Troubleshooting"],["contribute.html","Contribute"],["https://www.snik.eu/","Project Homepage"],["https://www.snik.eu/sites/www.snik.eu/files/files/uploads/Ergebnisse/SNIK_Metamodell_V8.png","SNIK Meta Model"],[Z.about,"About SNIK Graph"],["https://github.com/IMISE/snik-ontology/issues","Submit Feedback about the Ontology"],[Z.visualizationFeedback,"Submit Feedback about the Visualization"]]}]}addOptions(e){const n=E("options-menu-content"),s=["separateSubs","cumulativeSearch","grid","combineMatchMode","dayMode"];this.optionBoxes={};for(const o of s){c.trace("Add option "+o);const i=document.createElement("a");e.push(i),n.appendChild(i),i.setAttribute("tabindex","-1"),i.classList.add("dropdown-entry");const a=document.createElement("input");this.optionBoxes[o]=a,i.appendChild(a),a.type="checkbox",a.autocomplete="off",this[o+"Box"]=a,a.id=o+"Box",i.addEventListener("keydown",qe(a)),i.appendChild(Ve(a,Je(o),o))}this.separateSubsBox.addEventListener("change",()=>{c.debug("Set separate Subontologies to "+this.separateSubsBox.checked)}),this.dayModeBox.addEventListener("change",()=>{for(const o of le())o.state.graph.invert(this.dayModeBox.checked);c.debug("Set dayMode to "+this.dayModeBox.checked)}),this.gridBox.addEventListener("change",()=>{document.body.classList[this.gridBox.checked?"add":"remove"]("grid"),c.debug("set gridBox to "+this.gridBox.checked)}),g.activeOptions.includes("day")&&this.dayModeBox.click(),this.cumulativeSearchBox.addEventListener("change",()=>{c.debug("Set cumulative search to "+this.cumulativeSearchBox.checked)}),this.combineMatchModeBox.addEventListener("change",()=>{c.debug("Set combine match mode to "+this.combineMatchModeBox.checked),setTimeout(()=>{le().map(o=>o.state.graph).forEach(o=>o.combineMatch(this.combineMatchModeBox.checked))},10)})}addMenu(){console.groupCollapsed("Add menu");const e=document.createElement("ul");E("top").prepend(e),e.classList.add("dropdown-bar"),e.setAttribute("tabindex","0");const n=this.menuData(),s=[],o=[];for(let i=0;i<n.length;i++){const a=n[i],r=document.createElement("li");r.setAttribute("tabindex","-1"),e.appendChild(r);const l=document.createElement("span");s.push(l),r.appendChild(l),l.classList.add("dropdown-menu"),l.innerText=a.label,l.setAttribute("data-i18n",a.i18n),l.setAttribute("tabindex","-1");const h=document.createElement("div");r.appendChild(h),h.classList.add("dropdown-content"),h.setAttribute("tabindex","-1"),a.id&&(h.id=a.id+"-menu-content"),l.addEventListener("click",()=>{for(const d of document.getElementsByClassName("dropdown-content"))h!==d&&d.classList.remove("show");h.classList.toggle("show")});const p=[];o.push(p);for(const d of a.entries){const u=document.createElement("a");switch(p.push(u),u.classList.add("dropdown-entry"),u.setAttribute("data-i18n",d[2]),u.setAttribute("tabindex","-1"),h.appendChild(u),u.innerHTML=d[1],typeof d[0]){case"string":{u.href=d[0],u.target="_blank";break}case"function":{u.addEventListener("click",d[0]);const w=d[3];w&&(xt(w,d[0]),u.innerHTML=u.innerHTML+` (${w.toUpperCase()})`);break}default:c.error("unknown menu entry action type: "+typeof d[0])}}l.addEventListener("keydown",d=>{switch(d.key){case"ArrowLeft":s[(i-1+s.length)%s.length].focus(),s[(i-1+s.length)%s.length].click();break;case"ArrowRight":s[(i+1)%s.length].focus(),s[(i+1)%s.length].click();break;case"ArrowDown":p[0].focus();break}})}vn(f().graph,E("file-menu-content"),o[0]),c.debug("fileLoadEntries added"),cn(E("filter-menu-content"),o[1]),c.debug("filter entries added"),this.addOptions(o[2]);for(let i=0;i<o.length;i++){const a=o[i];for(let r=0;r<a.length;r++)a[r].addEventListener("keydown",l=>{switch(l.key){case"ArrowLeft":s[(i-1+s.length)%s.length].focus(),s[(i-1+s.length)%s.length].click();break;case"ArrowRight":s[(i+1)%s.length].focus(),s[(i+1)%s.length].click();break;case"ArrowUp":a[(r-1+a.length)%a.length].focus();break;case"ArrowDown":a[(r+1)%a.length].focus();break}})}c.debug("Menu added"),console.groupEnd()}static closeListener(e){if(e&&e.target&&e.target.matches&&!e.target.matches(".dropdown-entry")&&!e.target.matches(".dropdown-menu")&&!e.target.matches("input.filterbox")){const n=document.getElementsByClassName("dropdown-content");Array.from(n).forEach(s=>s.classList.remove("show"))}}optionsToJSON(){const e=["separateSubs","cumulativeSearch","grid","combineMatchMode","dayMode"],n={};for(const s of e)n[s]=this.optionBoxes[s].checked;return n}optionsFromJSON(e){const n=this.optionsToJSON();for(const[s,o]of Object.entries(e))n[s]!==o&&this.optionBoxes[s].click()}}let Ie=null;const Sn={shouldSort:!0,tokenize:!0,threshold:.25,maxPatternLength:40,minMatchCharLength:3,matchAllTokens:!0,location:0,ignoreLocation:!0,distance:100,id:"uri",keys:[{name:"l",weight:.7},{name:"def",weight:.3}]};async function Cn(){console.groupCollapsed("Create Fuse.js index");const t=G("Create Fuse search index");c.debug("Create Fuse Search Index with searchCloseMatch = "+g.searchCloseMatch);const e=`select
  ?c as ?uri
  group_concat(distinct(str(?l));separator="|") as ?l
  group_concat(distinct(str(?def));separator="|") as ?def
  from <${g.sparql.graph}>
  {
    {
     {?c a owl:Class.} UNION {?c a [a owl:Class]}
     ?c rdfs:label ?l.
    }
    UNION {?c skos:altLabel ?l.}
    UNION {?c skos:closeMatch|^skos:closeMatch ?cm. ?cm rdfs:label|skos:altLabel ?l.}
    OPTIONAL {?c skos:definition ?def.}
  }`,n=await M(e),s=[];for(const o of n){const i=o.uri.value.replace(/.*\//,""),a={uri:o.uri.value,l:[...o.l.value.split("|"),i]};s.push(a),a.l=[...new Set(a.l)],o.def.value&&(a.def=o.def.value)}return Ie=new Nt(s,Sn),t.stop(s.length+" items"),console.groupEnd(),s}async function kn(t){return Ie||await Cn(),Ie.search(t)}class Ln{constructor(e){b(this,"resultNodes",[]);e.addEventListener("submit",n=>{n.preventDefault(),Y(()=>this.showSearch(n.target.children.query.value))}),c.debug("search initialized")}showSearchResults(e,n){this.resultNodes=[];const s=E("tab:search-results");for(;s.rows.length>0;)s.deleteRow(0);if(n.length===0)return E("h2:search-results").innerHTML=`No Search Results for "${e}"`,!1;if(n.length===1)return O.close("search-results"),f().graph.presentUri(n[0]),!0;n.length===be?E("h2:search-results").innerHTML=`First ${be} Search Results for "${e}"`:E("h2:search-results").innerHTML=`${n.length} Search Results for "${e}"`;const o={};n.forEach(r=>{const l=f().cy.getElementById(r)[0];l?(o[r]=0,l.hasClass("hidden")&&!l.hasClass("filtered")?o[r]=1:l.hasClass("filtered")&&(o[r]=2)):o[r]=3});const i=new Set;n.sort((r,l)=>o[r]-o[l]),n.forEach(r=>{const l=s.insertRow(),h=l.insertCell(),p=document.createElement("input");p.type="checkbox",h.appendChild(p),h.addEventListener("change",S=>{i[S.target.checked?"add":"remove"](r)});const d=l.insertCell(),u=l.insertCell();window.presentUri=f().graph.presentUri,d.innerHTML=`<a class="search-class${o[r]}" href="javascript:MicroModal.close('search-results');window.presentUri('${r}');void(0)">
          ${r.replace(Me,"")}</a>`;const w=`<a class="search-class${o[r]}" href="${r}" target="_blank">Description</a>`;u.innerHTML=w});const a=s.insertRow(0);a.insertCell();{const r=a.insertCell();r.innerHTML="<a href='#'>Highlight All</a>",r.addEventListener("click",l=>{O.close("search-results"),f().graph.presentUris(n),l.preventDefault()})}{const r=a.insertCell();r.innerHTML="<a href='#'>Highlight Selected</a>",r.addEventListener("click",l=>{O.close("search-results"),f().graph.presentUris([...i]),l.preventDefault()})}return!0}async search(e){const s=`select distinct(?s) { {?s a owl:Class.} UNION {?s a rdf:Property.}
        {?s rdfs:label ?l.} UNION {?s skos:altLabel ?l.}	filter(regex(lcase(replace(str(?l),"[ -]","")),lcase("${e.replace(/[\x22\x27\x5C\x0A\x0D -]/g,"")}"))) } order by asc(strlen(str(?l))) limit ${be}`;return c.debug(s),(await M(s)).map(i=>i.s.value)}async showSearch(e){O.show("search-results");const s=(await kn(e)).map(o=>o.item.uri);return this.showSearchResults(e,s),!1}}function En(){const t=new Tt({duration:1e4,types:[{type:"warn",backgroundColor:"orange",icon:{className:"material-icons",tagName:"i",text:"warning"}},{type:"info",backgroundColor:"green",icon:{className:"material-icons",tagName:"i",text:"info"}},{type:"debug",backgroundColor:"blue",icon:{className:"material-icons",tagName:"i",text:"debug"}},{type:"trace",backgroundColor:"darkgray",icon:{className:"material-icons",tagName:"i",text:"trace"}}]});c.setLevel(g.logLevelConsole);const e=["error","warn","info","debug","trace"],n={silent:0,error:1,warn:2,info:3,debug:4,trace:5};for(const s of e){const o=c[s];c[s]=i=>{o(i),n[s]<=n[g.logLevelMemory]&&(c.logs||(c.logs=[]),c.logs.push(i)),n[s]<=n[g.logLevelDisplay]&&t.open({type:s,message:i})}}}function xn(t){const e=[],n=self.performance&&self.performance.memory?3:2;for(let a=0;a<n+2;a++){const r=new ye;r.domElement.style.cssText=`position:absolute;top:0px;right:${100*a}px;`,document.body.appendChild(r.dom),e.push(r)}const s=e[n].addPanel(new ye.Panel("Nodes","#ff8","#221")),o=e[n+1].addPanel(new ye.Panel("Edges","#f8f","#212"));for(let a=0;a<e.length;a++)e[a].showPanel(Math.min(a,e.length-2));let i=0;requestAnimationFrame(function a(){for(const r of e)r.update();i=(i+1)%30,i===0&&(s.update(t.nodes(":visible").size()),o.update(t.edges(":visible").size())),requestAnimationFrame(a)})}function Nn(){const t=new URL(window.location.href),e={endpoint:g.sparql.endpoint,instances:g.sparql.instances};return Object.assign(e,we(T(T({empty:t.searchParams.get("empty")!==null,clazz:t.searchParams.get("class"),jsonUrl:t.searchParams.get("json")},t.searchParams.get("sparql")&&{endpoint:t.searchParams.get("sparql")}),t.searchParams.get("instances")!==null&&{instances:t.searchParams.get("instances")===""||t.searchParams.get("instances")==="true"}),{virtual:t.searchParams.get("virtual")!==null,rdfGraph:t.searchParams.get("graph"),sub:t.searchParams.get("sub"),benchmark:t.searchParams.get("benchmark")!==null}))}async function Tn(t,e){try{if(e.benchmark&&xn(t.cy),e.empty){c.info('Parameter "empty" detected. Skip loading and display file load prompt.');const s=document.getElementById("loadarea"),o=document.createElement("center");s.appendChild(o),o.innerHTML+=`<button id="load-button" style="font-size:10vh;margin-top:20vh">Datei Laden
      <input id="load-input" type="file" style="display:none"></input>
      </button>`;const i=document.getElementById("load-input"),a=document.getElementById("load-button");a.onclick=()=>{i.click()},i.addEventListener("change",r=>{s.removeChild(o),t.cy.resize(),wn(t)(r)});return}if(e.jsonUrl){c.info("Loading from JSON URL "+e.jsonUrl);const s=await(await fetch(e.jsonUrl)).json();t.cy.add(s),x(t.cy,ce);return}c.debug("Loading from SPARQL Endpoint "+e.endpoint),g.sparql.endpoint=e.endpoint;const n=[];if(e.endpoint===Re){let s=[];e.sub&&(s=e.sub.split(",")),s.length===0&&(s=[...g.helperGraphs,...g.defaultSubOntologies]),n.push(...s.map(o=>Me+o))}else e.rdfGraph&&(n.push(e.rdfGraph),g.sparql.graph=e.rdfGraph);if(console.debug(`Loading graph with${e.instances?"":"out"} instances.`),await Be(t.cy,n,e.instances,e.virtual),t.instancesLoaded=e.instances,e.endpoint===Re){await st(t.cy,K,g.defaultSubOntologies,!1),m.setVisible(t.cy.elements(),!1);const s=t.cy.nodes("node[id='http://www.snik.eu/ontology/bb/ChiefInformationOfficer']");t.showStar(s),await x(t.cy,ce),t.cy.elements().unselect(),t.cy.center(s),t.cy.fit(t.cy.elements(":visible")),m.setVisible(s,!0),t.starMode=!0}else await x(t.cy,K);e.clazz&&(c.info(`Parameter "class" detected. Centering on URI ${e.clazz}.`),setTimeout(()=>t.presentUri(e.clazz),300))}catch(n){c.error(n),c.error("Error initializing SNIK Graph "+n)}}async function In(t){await Y(async()=>{const e=Nn();await Tn(t,e),t.menu=new Z,new Ln(E("search")),Xe()}),Xe()}const ee=[];function On(){document.documentElement.addEventListener("keydown",t=>{const e=t.target;if(!e||e.nodeName!=="BODY")return;const n=f();if(!!n){if((t.code==="Delete"||t.code==="Backspace")&&n.cy.remove(":selected"),t.code==="KeyS"||t.code==="KeyC"){const s=n.cy.nodes(":selected");if(s.size()===0)return;ee.length=0,ee.push(...s.map(o=>o.id())),c.debug(`Copied ${ee.length} elements from ${n.name}.`),c.info("Partial graph copied!")}if(t.code==="KeyP"||t.code==="KeyV"){n.cy.startBatch(),n.cy.elements().unselect();const s=n.graph.getElementsByIds(ee);m.setVisible(s,!0),n.cy.endBatch();const o=n.cy.nodes(".unfiltered").not(".hidden"),i=s.edgesWith(o),a=s.union(i);m.setVisible(a,!0),a.select(),n.cy.fit(n.cy.elements(".unfiltered").not(".hidden")),c.debug(`Pasted ${ee.length} elements into ${n.name}.`),c.info("Partial graph inserted!")}}})}async function An(){if(window.mainCalled){c.warn("main() is called multiple times for unknown reasons. Ignoring.");return}window.mainCalled=!0,console.groupCollapsed("Initializing"),console.time("Initializing"),En(),On(),O.init({openTrigger:"data-custom-open"});for(let t=0;t<g.multiview.initialTabs;t++)await new P().initialized;console.timeEnd("Initializing"),console.groupEnd()}document.addEventListener("DOMContentLoaded",An);
